{"version":3,"sources":["Header.js","LivePrice.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","this","props","react_default","a","createElement","className","type","Component","LivePrice","_this$props","btcPrice","ethPrice","xrpPrice","btcPCT","ethPCT","xrpPCT","href","App","state","information","_this2","fetch","then","potato","json","response","setState","DISPLAY","BTC","KRW","PRICE","ETH","XRP","CHANGEPCT24HOUR","_this$state","src_Header","src_LivePrice","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oMAiBeA,mLAdL,IACAC,EAAUC,KAAKC,MAAfF,MACR,OACCG,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,MACAH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,cAC/BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,oBARgBE,aCoENC,mLAnEL,IAAAC,EAC0DT,KAAKC,MAA/DS,EADAD,EACAC,SAAWC,EADXF,EACWE,SAAUC,EADrBH,EACqBG,SAAUC,EAD/BJ,EAC+BI,OAAQC,EADvCL,EACuCK,OAAQC,EAD/CN,EAC+CM,OACvD,OACCb,EAAAC,EAAAC,cAAA,eACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,cACCH,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,aADD,UAKDF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDAAR,YAEDd,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDAAR,YAEDd,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDAAR,cAIHd,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDACPd,EAAAC,EAAAC,cAAA,WAAMM,KAGRR,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDACPd,EAAAC,EAAAC,cAAA,WAAMO,KAGRT,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDACPd,EAAAC,EAAAC,cAAA,WAAMQ,MAITV,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDACPd,EAAAC,EAAAC,cAAA,WAAMS,EAAN,QAGFX,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDACPd,EAAAC,EAAAC,cAAA,WAAMU,EAAN,QAGFZ,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gDACPd,EAAAC,EAAAC,cAAA,WAAMW,EAAN,mBAzDeR,aCkDTU,6MA9CdC,MAAQ,CACPnB,MAAQ,sBACRoB,YAAc,uFAGI,IAAAC,EAAApB,KAGVqB,MAAM,+JACZC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAM,SAAAG,GACNL,EAAKM,SAAS,CACbhB,SAAWe,EAASE,QAAQC,IAAIC,IAAIC,MACpCnB,SAAWc,EAASE,QAAQI,IAAIF,IAAIC,MACpClB,SAAWa,EAASE,QAAQK,IAAIH,IAAIC,MACpCjB,OAASY,EAASE,QAAQC,IAAIC,IAAII,gBAClCnB,OAASW,EAASE,QAAQI,IAAIF,IAAII,gBAClClB,OAASU,EAASE,QAAQK,IAAIH,IAAII,qDAU7B,IAAAC,EACiElC,KAAKkB,MAAtEnB,EADAmC,EACAnC,MAAQW,EADRwB,EACQxB,SAAWC,EADnBuB,EACmBvB,SAAUC,EAD7BsB,EAC6BtB,SAAUC,EADvCqB,EACuCrB,OAAQC,EAD/CoB,EAC+CpB,OAAQC,EADvDmB,EACuDnB,OAE/D,OACCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAC+B,EAAD,CAAQpC,MAAOA,IACfG,EAAAC,EAAAC,cAACgC,EAAD,CACC1B,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,YAxCKR,aCOE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.9e51848f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n\trender() {\n\t\tconst { title } = this.props;\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<p className=\"countdown\">60</p>\n\t\t\t\t<button type=\"button\" className=\"btn_reload\">\n\t\t\t\t\t<span className=\"blind\">Refresh</span>\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass LivePrice extends Component {\n\trender() {\n\t\tconst { btcPrice , ethPrice, xrpPrice, btcPCT, ethPCT, xrpPCT } = this.props;\n\t\treturn (\n\t\t\t<article>\n\t\t\t\t<h2 className=\"h_type\">Live Prices \n\t\t\t\t\t<span>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t17:11\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t\t<table className=\"type09\">\n\t\t\t\t\t<caption>Cryptocurrency Live</caption>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/btc/krw\">BTC/KRW</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/eth/krw\">ETH/KRW</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/xrp/krw\">XRP/KRW</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/btc/krw\">\n\t\t\t\t\t\t\t\t\t<div>{btcPrice}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/eth/krw\">\n\t\t\t\t\t\t\t\t\t<div>{ethPrice}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/xrp/krw\">\n\t\t\t\t\t\t\t\t\t<div>{xrpPrice}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/btc/krw\">\n\t\t\t\t\t\t\t\t\t<div>{btcPCT} %</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/eth/krw\">\n\t\t\t\t\t\t\t\t\t<div>{ethPCT} %</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"https://cryptowat.ch/markets/bithumb/xrp/krw\">\n\t\t\t\t\t\t\t\t\t<div>{xrpPCT} %</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nexport default LivePrice;\n","import React, { Component } from 'react';\n//import axios from 'axios';\nimport Header from './Header';\nimport LivePrice from './LivePrice';\n\nclass App extends Component {\t\n\tstate = {\n\t\ttitle : \"Live Cryptocurrency\",\n\t\tinformation : []\n\t}\n\n\tcomponentDidMount(){\n\t\t\n\t\tconst getPrice = () => {\n\t\t\treturn fetch('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,XRP&tsyms=KRW&&api_key=e04447345e2dc44046b1ffbc38ee236c71605c813b2b77e2ad3aa1c3ce6ae252')\n\t\t\t.then(potato => potato.json())\n\t\t\t.then( response => {\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tbtcPrice : response.DISPLAY.BTC.KRW.PRICE,\n\t\t\t\t\tethPrice : response.DISPLAY.ETH.KRW.PRICE,\n\t\t\t\t\txrpPrice : response.DISPLAY.XRP.KRW.PRICE,\n\t\t\t\t\tbtcPCT : response.DISPLAY.BTC.KRW.CHANGEPCT24HOUR,\n\t\t\t\t\tethPCT : response.DISPLAY.ETH.KRW.CHANGEPCT24HOUR,\n\t\t\t\t\txrpPCT : response.DISPLAY.XRP.KRW.CHANGEPCT24HOUR,\n\t\t\t\t})\n\t\t\t\t//console.log(response.DISPLAY.BTC.PRICE)\n\n\t\t\t})\n\t\t}\n\t\tgetPrice();\n\t\t\n\t}\n\n\trender() {\n\t\tconst { title , btcPrice , ethPrice, xrpPrice, btcPCT, ethPCT, xrpPCT} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"bx\">\n\t\t\t\t<Header title={title} />\n\t\t\t\t<LivePrice \n\t\t\t\t\tbtcPrice={btcPrice} \n\t\t\t\t\tethPrice={ethPrice} \n\t\t\t\t\txrpPrice={xrpPrice}\n\t\t\t\t\tbtcPCT={btcPCT} \n\t\t\t\t\tethPCT={ethPCT} \n\t\t\t\t\txrpPCT={xrpPCT}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}