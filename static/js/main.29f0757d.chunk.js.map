{"version":3,"sources":["component/Header.js","component/LivePrice.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this$props","this","props","title","countDown","react_default","a","createElement","className","type","Component","LivePrice","url","btcPrice","ethPrice","xrpPrice","btcPCT","ethPCT","xrpPCT","isActive","href","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_pageReload","window","location","reload","_countDownStart","interval","setInterval","setState","state","clearInterval","_getPrice","fetch","then","potato","json","response","DISPLAY","BTC","KRW","PRICE","ETH","XRP","CHANGEPCT24HOUR","onClick","bind","assertThisInitialized","_this$state","component_Header","component_LivePrice","src","width","height","alt","dateTime","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29f0757d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n\trender() {\n\t\tconst { title, countDown } = this.props;\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<p className=\"countdown\">{countDown}</p>\n\t\t\t\t<button type=\"button\" className=\"btn_reload\">\n\t\t\t\t\t<span className=\"blind\">Refresh</span>\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass LivePrice extends Component {\n\trender() {\n\t\tconst { url, btcPrice , ethPrice, xrpPrice, btcPCT, ethPCT, xrpPCT, isActive } = this.props;\n\t\treturn (\n\t\t\t<article>\n\t\t\t\t<h2 className=\"h_type\">Live Prices \n\t\t\t\t\t<span>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t17:11\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t\t<table className=\"type09\">\n\t\t\t\t\t<caption>Cryptocurrency Live</caption>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<a href={url[0]}>BTC/KRW</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<a href={url[1]}>ETH/KRW</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<a href={url[2]}>XRP/KRW</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className={isActive ? 'active' : ''}>\n\t\t\t\t\t\t\t\t<a href={url[0]}>\n\t\t\t\t\t\t\t\t\t<div>{btcPrice}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className={isActive ? 'active' : ''}>\n\t\t\t\t\t\t\t\t<a href={url[1]}>\n\t\t\t\t\t\t\t\t\t<div>{ethPrice}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className={isActive ? 'active' : ''}>\n\t\t\t\t\t\t\t\t<a href={url[2]}>\n\t\t\t\t\t\t\t\t\t<div>{xrpPrice}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className={isActive ? 'active' : ''}>\n\t\t\t\t\t\t\t\t<a href={url[0]}>\n\t\t\t\t\t\t\t\t\t<div>{btcPCT} %</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className={isActive ? 'active' : ''}>\n\t\t\t\t\t\t\t\t<a href={url[1]}>\n\t\t\t\t\t\t\t\t\t<div>{ethPCT} %</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className={isActive ? 'active' : ''}>\n\t\t\t\t\t\t\t\t<a href={url[2]}>\n\t\t\t\t\t\t\t\t\t<div>{xrpPCT} %</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nexport default LivePrice;\n","import React, { Component } from 'react';\nimport Header from './component/Header';\nimport LivePrice from './component/LivePrice';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.onClick = this._pageReload.bind(this);\n        this.state = {\n            title : \"Live Cryptocurrency\",\n\t\t\turl : [\n\t\t\t\t'https://cryptowat.ch/markets/bithumb/btc/krw',\n\t\t\t\t'https://cryptowat.ch/markets/bithumb/eth/krw',\n\t\t\t\t'https://cryptowat.ch/markets/bithumb/xrp/krw',\n\t\t\t],\n            btcPrice : '0',\n            ethPrice : '0',\n            xrpPrice : '0',\n            btcPCT : '0%',\n            ethPCT : '0%',\n            xrpPCT : '0%',\n            isActive : false,\n            countDown : 60,\n            \n        }\n    }\n\n    _pageReload = () => {\n        window.location.reload();\n    }\n\n    _countDownStart = () => {\n        this.interval = setInterval(() => {\n            this.setState({\n                countDown : this.state.countDown - 1\n            })\n            if(this.state.countDown === 0){\n                this.setState({\n                    countDown : 60\n                })\n                clearInterval(this.interval);   \n                //this._pageReload();\n            }\n            //console.log(this.state.countDown)\n        }, 1000)\n    }\n    \n    _getPrice = () => {\n        return fetch('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,XRP&tsyms=KRW&&api_key=e04447345e2dc44046b1ffbc38ee236c71605c813b2b77e2ad3aa1c3ce6ae252')\n        .then(potato => potato.json())\n        .then( response => {\n            this.setState({\n                btcPrice : response.DISPLAY.BTC.KRW.PRICE,\n                ethPrice : response.DISPLAY.ETH.KRW.PRICE,\n                xrpPrice : response.DISPLAY.XRP.KRW.PRICE,\n                btcPCT : response.DISPLAY.BTC.KRW.CHANGEPCT24HOUR,\n                ethPCT : response.DISPLAY.ETH.KRW.CHANGEPCT24HOUR,\n                xrpPCT : response.DISPLAY.XRP.KRW.CHANGEPCT24HOUR,\n                isActive : true,\n            })\n        })\n    }\n\n    componentDidMount(){\n        this._getPrice();\n        this._countDownStart();\n    }\n\n    render() {\n        const { title, url, countDown, btcPrice , ethPrice, xrpPrice, btcPCT, ethPCT, xrpPCT, isActive} = this.state;\n\n        return (\n            <div className=\"bx\">\n                <Header title={title} countDown={countDown}/>\n                <LivePrice\n\t\t\t\t\turl={url}\n                    btcPrice={btcPrice}\n                    ethPrice={ethPrice}\n                    xrpPrice={xrpPrice}\n                    btcPCT={btcPCT}\n                    ethPCT={ethPCT}\n                    xrpPCT={xrpPCT}\n                    isActive={isActive}\n                />\n                <article>\n                    <div className=\"h_area\">\n                        <h2>Recent News <span><span></span>16:56</span></h2>\n                        <button type=\"button\">EN &gt; KR</button>\n                    </div>\n                    <ul>\n                        <li>\n                            <a href=\"https://www.ccn.com/bahrain-becomes-first-arab-nation-to-comprehensively-regulate-bitcoin\">\n                            <div className=\"bx2\"><img src=\"https://images.cryptocompare.com/news/ccn/cgPx00w08g0.jpeg\" width=\"60\" height=\"60\" alt=\"\" /></div>\n                            <dl>\n                                <dt>\n                                    <time dateTime=\"1551253824000\">19/02/27 16:50</time> Bahrain Becomes First Arab Nation to Comprehensively Regulate Bitcoin\n                                </dt>\n                                <dd>\n                                    <p>A couple months ago, CCN reported that Bahrain had completed its draft regulations for cryptocurrencies. The Arab nation has now&nbsp;completed its finalized version of the same, and it hasn’t noted much change in its positive disposition. According to a post on the Central Bank of Bahrain’s website, the country is now a safe place to do business crypto assets. Khalid Hamid, the director of Banking Supervision, says: The CBB’s introduction of the rules relating to crypto-assets is in line with its goal to develop a comprehensive rules for the FinTech eco-system supporting Bahrain’s position as a leading financial hub in The post Bahrain Becomes First Arab Nation to Comprehensively Regulate Bitcoin appeared first on CCN</p>\n                                </dd>\n                            </dl>\n                            </a>\n                        </li>\n                    </ul>\n                    <button type=\"button\" className=\"btn_type\">More (5/50) </button>\n                </article>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}